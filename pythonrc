# Add auto-completion and a stored history file of commands to your Python
# interactive interpreter. Requires Python 2.0+, readline. Autocomplete is
# bound to the Esc key by default (you can change it - see readline docs).
#
# ~/.pythonrc, python startup script
# set the following environment variable to run this file when the
# python interactive interpreter is started:
#     export PYTHONSTARTUP=$HOME/.pythonrc

# PYTHONSTARTUP does *not* expand "~", so you have to put the
# full path to your home directory here:

def activate_readline():
    import rlcompleter
    import atexit
    import os
    import sys
    import readline

    home_path = os.environ['HOME']

    # Set up inputrc and tab completion.
    try:
        import readline
    except ImportError:
        print "Module readline not available."
    else:
        import rlcompleter
        if 'libedit' in readline.__doc__:
            readline.parse_and_bind("bind ^I rl_complete")
        else:
            readline.parse_and_bind("tab: complete")

    readline.parse_and_bind('"\C-p": history-search-backward')
    readline.parse_and_bind('"\C-n": history-search-forward')
    readline.parse_and_bind('set editing-mode emacs')
    readline.parse_and_bind('set horizontal-scroll-mode On')
    readline.parse_and_bind('set completion-ignore-case on')

    # Save history at exit.
    history_path = os.path.expanduser(os.path.join(home_path, '.pyhistory'))
    def save_history(history_path=history_path):
        import readline
        readline.write_history_file(history_path)
    atexit.register(save_history)
    if os.path.exists(history_path):
        readline.read_history_file(history_path)

activate_readline()
del activate_readline

# docstring convenience function
def doc(o):
    print(o.__doc__)
